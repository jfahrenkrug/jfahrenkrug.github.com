---
import { getEntry } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Hero from '../components/Hero.astro';
import SpeakingEngagement from '../components/SpeakingEngagement.astro';

const speakingData = await getEntry('speaking', 'engagements');
const engagements = speakingData?.data || [];
const sortedEngagements = engagements.sort((a, b) => {
	return new Date(b.date).getTime() - new Date(a.date).getTime();
});
---

<BaseLayout
	title="Speaking | Johannes Fahrenkrug"
	description="Johannes Fahrenkrug's speaking engagements and conference talks"
>
	<div class="stack gap-20">
		<main class="wrapper speaking">
			<Hero
				title="Speaking"
				tagline="Sharing knowledge at conferences and workshops worldwide"
				align="start"
			>
				<img
					width="1547"
					height="879"
					src="/assets/at-wwdc-2007.jpg"
					alt="Johannes Fahrenkrug at WWDC 2007"
				/>
			</Hero>

			<section class="speaking-intro">
				<h2 class="section-title">Let's Connect</h2>
				<div class="content">
					<p>
						I love sharing knowledge and connecting with fellow developers at conferences and workshops around the world.
						From iOS development and AI integration to team leadership and technical architecture, I bring real-world experience and practical insights to every presentation.
					</p>
					<div class="contact-speaking">
						<a href="mailto:johannes@springenwerk.com?subject=Speaking Opportunity" class="contact-button">
							Interested in having me speak? Let's talk!
						</a>
					</div>
				</div>
			</section>

			<section class="engagements-section">
				<h2 class="section-title">Speaking Engagements</h2>
				<div class="engagements-grid">
					{sortedEngagements.map((engagement) => (
						<SpeakingEngagement engagement={engagement} />
					))}
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.speaking {
		display: flex;
		flex-direction: column;
		gap: 3.5rem;
	}

	.speaking-intro {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		color: var(--gray-200);
	}

	.section-title {
		grid-column-start: 1;
		font-size: var(--text-xl);
		color: var(--gray-0);
	}

	.content {
		grid-column: 2 / 4;
		font-size: var(--text-lg);
	}

	.contact-speaking {
		margin-top: 2rem;
	}

	.contact-button {
		display: inline-flex;
		align-items: center;
		background: var(--accent-regular);
		color: var(--accent-text-over);
		padding: 0.75rem 1.5rem;
		border-radius: 0.5rem;
		text-decoration: none;
		font-weight: 600;
		font-size: var(--text-base);
		transition: background-color var(--theme-transition);
		box-shadow: var(--shadow-sm);
	}

	.contact-button:hover {
		background: var(--accent-dark);
		box-shadow: var(--shadow-md);
	}

	.engagements-section {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.engagements-grid {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	img {
		margin-top: 1.5rem;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.speaking {
			display: grid;
			grid-template-columns: 1fr 60% 1fr;
		}

		.speaking > :global(:first-child) {
			grid-column-start: 2;
		}

		.speaking-intro {
			display: contents;
		}

		.engagements-section {
			grid-column: 1 / -1;
			max-width: 1200px;
			margin: 0 auto;
			padding: 0 2rem;
		}

		.engagements-grid {
			gap: 2rem;
		}
	}
</style>